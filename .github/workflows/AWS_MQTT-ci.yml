name: Send_2_AWS
on:
  workflow_dispatch:

  pull_request:
    branches: [main]
    paths:
      - ./**

  push:
    branches: [main]
    paths:
      - ./**

  schedule:
    - cron: '00 22 * * 0'

# A new triggered workflow run will interrupt an existing workflow run
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # https://github.com/ARM-software/cmsis-actions
      - name: Activate vcpkg
        uses: ARM-software/cmsis-actions/vcpkg@v1
        with: 
          config: "./vcpkg-configuration.json"

      # https://github.com/ARM-software/cmsis-actions
      - name: Activate Arm tool license
        uses: ARM-software/cmsis-actions/armlm@v1

      # Clearify the usage of the following action
      # https://github.com/ammaraskar/gcc-problem-matcher
      # https://github.com/actions/toolkit/blob/master/
      - uses: ammaraskar/gcc-problem-matcher@master

      # Configure AWS IoT Thing Credentials
      - name: Configure AWS IoT Thing Credentials
        env:
          VAR_MQTT_BROKER_ENDPOINT: ${{ vars.VAR_MQTT_BROKER_ENDPOINT }}
          VAR_IOT_THING_NAME: ${{ vars.VAR_IOT_THING_NAME }}
          VAR_CLIENT_CERTIFICATE_PEM: ${{ vars.VAR_CLIENT_CERTIFICATE_PEM }}
          VAR_CLIENT_PRIVATE_KEY_PEM: ${{ vars.VAR_CLIENT_PRIVATE_KEY_PEM }}
        run: |
          cd amazon-freertos/demos/include/

          echo Certificate
          echo $VAR_CLIENT_CERTIFICATE_PEM

          echo Private Key
          echo $VAR_CLIENT_PRIVATE_KEY_PEM

          echo Endpoint
          echo $VAR_MQTT_BROKER_ENDPOINT

          echo IOT Name
          echo $VAR_IOT_THING_NAME

          sed -i "s:    #define clientcredentialMQTT_BROKER_ENDPOINT    "":    #define clientcredentialMQTT_BROKER_ENDPOINT    $VAR_MQTT_BROKER_ENDPOINT:" aws_clientcredential.h
          sed -i "s:    #define clientcredentialIOT_THING_NAME    "":    #define clientcredentialIOT_THING_NAME    $VAR_IOT_THING_NAME:" aws_clientcredential.h

          cat aws_clientcredential.h
          cat aws_clientcredential_keys.h

          cd ../../../

      # Build the executable
      - name: Build executable
        run: |
          cbuild Demo.csolution.yml --packs --context .Debug+AVH --rebuild


      # Execute the demo